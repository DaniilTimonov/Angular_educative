{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.isVerdana = true;\n    this.isNavy = true;\n    this.currentClasses = {\n      verdanaFont: this.isVerdana,\n      navyColor: this.isNavy\n    };\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  template: `\n    <data-comp></data-comp>\n    <div [ngClass]=\"currentClasses\">\n    \n                    <h1>Hello Angular</h1>\n                    <p>\n                        Angular представляет модульную архитектуру приложения\n                    </p>\n                </div>\n                <footer-comp></footer-comp>\n        <div [ngClass] = \"{invisible: visibility}\"\n                <button (click) = \"toggle()\"> toggle </button>\n                \n                `,\n  styles: [`.verdanaFont{font-size:13px; font-family:Verdana;}\n        .navyColor{color:navy;}`]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}